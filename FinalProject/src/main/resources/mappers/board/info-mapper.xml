<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="infoMapper">

	<resultMap id="InfoResultMap" type="info">

		<result property="infoNo" column="info_no" />
		<result property="infoTitle" column="info_title" />
		<result property="infoContent" column="info_content" />
		<result property="infoDate" column="info_date" />
		<result property="infoUpdateDate" column="info_update_date" />
		<result property="infoDeleteDate" column="info_delete_date" />
		<result property="infoViews" column="info_views" />
		<result property="infoTag1" column="info_tag1" />
		<result property="infoTag2" column="info_tag2" />
		<result property="infoTag3" column="info_tag3" />
		<result property="infoCategory" column="info_category" />
		<result property="infoBlind" column="info_blind" />
		<result property="infoCommentCount" column="info_comment_count" />

		<result property="memberNo" column="m_no" />
		<result property="nickname" column="nickname" />
		<result property="commentCount" column="comment_count" />

		<result property="imageFileName" column="m_picture" />
		<result property="imageFilePath" column="m_path" />

	</resultMap>

	<!-- 게시물 등록 -->
	<insert id="enrollBoard" parameterType="info">

		INSERT INTO INFO (
		info_no,
		info_title,
		info_content,
		info_category,
		info_date,
		info_views,
		info_tag1,
		info_tag2,
		info_tag3,
		m_no,
		info_blind,
		info_comment_count
		)
		VALUES (
		info_no_seq.NEXTVAL,
		#{infoTitle},
		#{infoContent},
		#{infoCategory},
		SYSDATE,
		0,
		#{infoTag1},
		#{infoTag2},
		#{infoTag3},
		#{memberNo},
		'N',
		0
		)

	</insert>


	<!-- 게시글 상세 보기 진입 -->
	<select id="getPostById" resultType="info">
		SELECT
		i.info_no AS infoNo,
		i.info_title AS infoTitle,
		m.m_nickname AS nickname,
		m.m_no AS memberNo,
		m.m_picture AS
		imageFileName,
		m.m_path AS imageFilePath,
		i.info_content
		AS infoContent,
		i.info_date AS infoDate,
		i.info_views AS infoViews,
		i.info_tag1 AS
		infoTag1,
		i.info_tag2 AS infoTag2,
		i.info_tag3 AS
		infoTag3,
		(SELECT
		COUNT(*) FROM info_comment WHERE info_no = i.info_no)
		AS commentCount
		FROM info i
		JOIN member m ON i.m_no = m.m_no
		WHERE
		i.info_no = #{infoNo}
	</select>



	<!-- 게시글 수정 -->
	<update id="updatePost" parameterType="info">
		UPDATE info SET
		info_title
		= #{infoTitle},
		info_content = #{infoContent},
		info_category =
		#{infoCategory},
		info_tag1 = #{infoTag1},
		info_tag2 = #{infoTag2},
		info_tag3 = #{infoTag3},
		info_update_date = SYSDATE
		WHERE info_no =
		#{infoNo}
	</update>

	<!--게시글 삭제 -->
	<delete id="deletePost" parameterType="int">
		UPDATE INFO
		SET
		info_delete_date = SYSDATE
		WHERE
		info_no = #{infoNo}
	</delete>

	<!-- 조회수 증가 -->
	<update id="increaseViews" parameterType="int">
		UPDATE INFO SET
		info_views = info_views + 1 WHERE info_no = #{infoNo}
	</update>

	<!-- 카테고리별 게시글수 조회 -->
	<select id="countPostsByCategory" parameterType="string"
		resultType="int">
		SELECT COUNT(*)
		FROM INFO
		WHERE INFO_CATEGORY =
		#{categoryName}
	</select>


	<!-- 카테고리별 게시글 조회 (페이징 처리) -->
	<select id="getPostsByCategory" parameterType="map"
		resultType="info">
		SELECT * FROM (
		SELECT a.*, member.m_nickname,
		member.m_picture,
		member.m_path,
		COUNT(info_comment.info_comment_no)
		OVER (PARTITION BY a.info_no) AS
		commentCount,
		row_number() over (order
		by a.INFO_DATE DESC) rnum
		FROM
		INFO a
		JOIN member ON a.m_no = member.m_no
		LEFT JOIN info_comment ON
		a.info_no = info_comment.info_no AND a.m_no =
		info_comment.m_no
		WHERE
		a.INFO_CATEGORY = #{categoryName} AND
		a.info_delete_date IS NULL
		)
		WHERE rnum
		between #{startIndex} + 1
		and
		#{startIndex} + #{pageSize}
	</select>


	<!-- 검색 결과 게시물 조회 -->
	<select id="searchPosts" parameterType="map" resultType="info">
		SELECT *
		FROM (
		SELECT
		i.*, m.m_nickname AS nickname, m.m_picture AS imageFileName, m.m_path AS
		imageFilePath,
		NVL((SELECT COUNT(*) FROM info_comment WHERE info_no = i.info_no), 0) AS
		commentCount,
		row_number() OVER (ORDER BY i.INFO_DATE DESC) rnum
		FROM info i
		JOIN member m ON i.m_no = m.m_no
		WHERE (i.info_title LIKE '%' || #{query} || '%' OR i.info_content LIKE '%'
		|| #{query} || '%')
		AND i.info_delete_date IS NULL
		)
		WHERE rnum BETWEEN #{startIndex} AND #{endIndex}
	</select>




	<!-- 검색 게시글 개수 조회 -->
	<select id="searchCountPosts" parameterType="string"
		resultType="int">
		SELECT COUNT(*)
		FROM INFO
		WHERE INFO_TITLE LIKE
		'%'||#{query}||'%' OR INFO_CONTENT LIKE
		'%'||#{query}||'%'
		AND
		info_delete_date IS NULL
	</select>


	<!-- 해당 게시글에 연결된 모든 댓글 삭제 -->
	<!-- <delete id="deleteByInfoNo"> DELETE FROM info_comment WHERE info_no 
		= #{infoNo} </delete> -->

	<!-- 전체 게시글 조회 (페이징 처리) -->
	<select id="getAllPosts" parameterType="map" resultType="info">
		SELECT *
		FROM (
		SELECT a.*, m.M_NICKNAME AS nickname, m.m_picture AS
		imageFilePath, m.m_path AS imageFileName, row_number() over (order
		by
		a.INFO_DATE DESC) rnum
		FROM INFO a
		JOIN MEMBER m ON a.M_NO = m.M_NO
		WHERE a.info_delete_date IS NULL
		)
		WHERE rnum between #{startIndex} + 1
		and #{startIndex} + #{pageSize}
	</select>

	<!-- 전체 게시글 수 조회 -->
	<select id="countPosts" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM INFO
		WHERE info_delete_date IS NULL
	</select>


	<!-- 게시글 정렬: 최신순 -->
	<select id="selectPostsOrderByDate" resultType="info">
		SELECT * FROM (
		SELECT a.*, member.m_nickname AS nickname,member.m_picture AS
		imageFilePath, member.m_path AS imageFileName,
		COALESCE(ic.commentCount, 0)
		AS commentCount,
		row_number() over (order
		by a.INFO_DATE DESC) rnum
		FROM INFO a
		JOIN member ON a.m_no =
		member.m_no
		LEFT JOIN (
		SELECT
		info_no, COUNT(*) as commentCount
		FROM
		info_comment
		GROUP BY info_no
		) ic
		ON a.info_no = ic.info_no
		WHERE
		a.INFO_CATEGORY = #{categoryName} AND a.info_delete_date IS NULL
		)
		WHERE rnum between #{startIndex} + 1
		and #{startIndex} + #{pageSize}
	</select>


	<!-- 게시글 정렬: 댓글 수별 -->
	<select id="selectPostsOrderByComments" resultType="info">
		SELECT * FROM
		(
		SELECT a.*, member.m_nickname AS nickname,member.m_picture AS
		imageFilePath, member.m_path AS imageFileName,
		COALESCE(ic.commentCount,
		0) AS commentCount,
		row_number() over (order
		by
		COALESCE(ic.commentCount, 0) DESC) rnum
		FROM INFO a
		JOIN member ON
		a.m_no = member.m_no
		LEFT JOIN (
		SELECT info_no, COUNT(*) as
		commentCount
		FROM info_comment
		GROUP BY info_no
		) ic ON a.info_no =
		ic.info_no
		WHERE a.INFO_CATEGORY = #{categoryName} AND
		a.info_delete_date IS NULL
		) WHERE rnum between
		#{startIndex} + 1 and
		#{startIndex} + #{pageSize}
	</select>


	<!-- 게시글 정렬: 조회 수별 -->
	<select id="selectPostsOrderByViews" resultType="info">
		SELECT * FROM (
		SELECT a.*, member.m_nickname AS nickname, member.m_picture AS
		imageFilePath, member.m_path AS imageFileName,
		COALESCE(ic.commentCount, 0)
		AS commentCount,
		row_number() over (order by a.INFO_VIEWS DESC) rnum
		FROM INFO a
		JOIN member ON a.m_no = member.m_no
		LEFT JOIN (
		SELECT
		info_no, COUNT(*) as commentCount
		FROM info_comment
		GROUP BY info_no
		) ic
		ON a.info_no = ic.info_no
		WHERE a.INFO_CATEGORY = #{categoryName} AND
		a.info_delete_date IS NULL
		)
		WHERE rnum between #{startIndex} + 1 and
		#{startIndex} + #{pageSize}
	</select>



	<!-- 마이페이지 no로 게시글 가져오기 -->
	<select id="fetchPostsByMemberNo" resultType="info">
		SELECT f.*, m.m_nickname
		FROM info f
		JOIN member m ON f.m_no = m.m_no
		WHERE f.m_no = #{mNo} AND f.info_delete_date IS NULL
		<if test="start != null and limit != null">
			OFFSET #{start} ROWS FETCH NEXT #{limit} ROWS ONLY
		</if>
	</select>

	<!--마이페이지 총 게시글 수 가져오기 -->
	<select id="allInfoBoardPostsNo" parameterType="int"
		resultType="int">
		SELECT COUNT(*) FROM info WHERE m_no = #{mNo} AND
		info_delete_date IS NULL
	</select>



</mapper>




