<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="colaboMapper"> 

	<resultMap type="colabo" id="colaboResultSet">
		<result column="P_NO" property="no"></result>
		<result column="P_SUBJECT" property="subject"></result>
		<result column="P_NAME" property="name"></result>
		<result column="P_DETAIL" property="detail"></result>
		<result column="P_STACK" property="stack"></result>
		<result column="P_PERSON_COUNT" property="personCount"></result>
		<result column="P_PERIOD" property="period"></result>
		<result column="P_UPLOAD_PATH" property="uploadPath"></result>
		<result column="P_UPLOAD_NAME" property="uploadName"></result>
		<result column="P_UPLOAD_ORIGIN_NAME" property="uploadOriginName"></result>
		<result column="P_STATE" property="state"></result>
		<result column="P_START_DATE" property="startDate"></result>
		<result column="P_END_DATE" property="endDate"></result>
		<result column="P_NOTICE_NO" property="noticeNo"></result>
		<result column="P_NOTICE_TITLE" property="noticeTitle"></result>
		<result column="P_NOTICE_CONTENT" property="noticeContent"></result>
		<result column="P_NOTICE_UPLOAD_PATH" property="uploadPath"></result>
		<result column="P_NOTICE_UPLOAD_NAME" property="uploadName"></result>
		<result column="P_NOTICE_UPLOAD_ORIGIN_NAME" property="uploadOriginName"></result>
		<result column="P_NOTICE_DATE" property="noticeDate"></result>
		<result column="P_NOTICE_VIEWS" property="noticeViews"></result>
		<result column="M_NO" property="memberNo"></result>
		<result column="M_NAME" property="memberName"></result>
		<result column="M_EMAIL" property="memberEmail"></result>
		<result column="M_NICKNAME" property="memberNickname"></result>
		<result column="M_HOPE" property="memberHope"></result>
		<result column="M_STACK" property="memberStack"></result>
		<result column="M_NUMBER" property="memberPhone"></result>
		<result column="INVITE_M_NO" property="inviteMNo"></result>
		<result column="INVITE_PROJECT_DATE" property="inviteProjectDate"></result>
		<result column="APPLY_M_NO" property="applyMNo"></result>
		<result column="APPLY_PROJECT_DATE" property="applyProjectDate"></result>
	</resultMap>
	
	<resultMap type="schedule" id="scheduleResultSet">
		<result column="P_NO" property="projectNo"></result>
		<result column="PS_CONTENT" property="title"></result>
		<result column="PS_START" property="start"></result>
		<result column="PS_END" property="end"></result>
	</resultMap>
	
	<resultMap type="skillChart" id="skillChartResultSet">
		<result column="P_NO" property="projectNo"></result>
		<result column="M_NO" property="memberNo"></result>
		<result column="M_NAME" property="memberName"></result>
		<result column="M_EMAIL" property="memberEmail"></result>
		<result column="PM_SKILL_NAME" property="pmSkillName"></result>
		<result column="PM_SKILL_FULL" property="pmSkillFull"></result>
		<result column="PM_SKILL_COLOR" property="pmSkillColor"></result>
		<result column="PM_SKILL_CATEGORY" property="pmSkillCategory"></result>
	</resultMap>
	
	<resultMap type="projectMember" id="projectMemberResultSet">
		<result column="P_NO" property="projectNo"></result>
		<result column="P_NAME" property="projectName"></result>
		<result column="M_NO" property="memberNo"></result>
		<result column="M_NAME" property="memberName"></result>
		<result column="M_EMAIL" property="memberEmail"></result>
		<result column="TEAM_ENROLL_DATE" property="teamEnrollDate"></result>
	</resultMap>
	
	<resultMap type="InviteProject" id="InviteProjectResultSet">
		<result column="P_NO" property="projectNo"></result>
		<result column="M_NO" property="memberNo"></result>
		<result column="INVITE_M_NO" property="inviteMNo"></result>
		<result column="INVITE_PROJECT_DATE" property="inviteProjectDate"></result>
		<result column="APPLY_M_NO" property="applyMNo"></result>
		<result column="APPLY_PROJECT_DATE" property="applyProjectDate"></result>
	</resultMap>
	
	<resultMap type="ProjectPush" id="ProjectPushResultSet">
		<result column="PUSH_NO" property="pushNo"></result>
		<result column="PUSH_TYPE" property="pushType"></result>
		<result column="PUSH_CONTENT" property="pushContent"></result>
		<result column="PUSH_DATE" property="pushDate"></result>
		<result column="PUSH_CHECK" property="pushCheck"></result>
		<result column="ADD_M_NO" property="addMNo"></result>
		<result column="M_NAME" property="addMName"></result>
		<result column="RECEIVE_M_NO" property="receiveMNo"></result>
		<result column="P_NO" property="projectNo"></result>
		<result column="P_NAME" property="projectName"></result>
	</resultMap>
	
	<select id="getProjectName" parameterType="int" resultType="String">
		SELECT P_NAME FROM COLABO
		WHERE P_NO = #{getProjectNo}
	</select>
	
	<update id="allChangePushType" parameterType="ProjectPush">
		UPDATE COLABO_PROJECT_PUSH
		SET PUSH_CHECK = 
		CASE WHEN RECEIVE_M_NO = #{memberNo} THEN 'Y'
		ELSE PUSH_CHECK
		END,
		CHECK_M_NO =
		CASE WHEN RECEIVE_M_NO = 0 THEN 
			CASE WHEN CHECK_M_NO IS NULL THEN #{checkMNo}
				 WHEN CHECK_M_NO IS NOT NULL THEN CHECK_M_NO || ',' || #{checkMNo}
				 END 
		END
		WHERE PUSH_NO IN 
		<foreach collection="pushNoList" index="index" item="pushNo" open="(" close=")" separator=",">
		#{pushNo}
		</foreach>
	</update>
	
	<update id="changePushType" parameterType="ProjectPush">
		UPDATE COLABO_PROJECT_PUSH 
		SET PUSH_CHECK = 
		CASE WHEN RECEIVE_M_NO = #{memberNo} THEN 'Y'
		ELSE PUSH_CHECK
		END,
		CHECK_M_NO =
		CASE WHEN RECEIVE_M_NO = 0 THEN 
			CASE WHEN CHECK_M_NO IS NULL THEN #{checkMNo}
				 WHEN CHECK_M_NO IS NOT NULL THEN CHECK_M_NO || ',' || #{checkMNo}
				 END 
		END
		WHERE PUSH_NO = #{pushNo}
	</update>
	
	<select id="getPushList" parameterType="ProjectPush" resultMap="ProjectPushResultSet">
		SELECT * FROM COLABO_PROJECT_PUSH cpp
		JOIN MEMBER m 
		ON cpp.ADD_M_NO = m.M_NO 
		JOIN COLABO c
		ON cpp.P_NO = c.P_NO 
		WHERE cpp.PUSH_CHECK = 'N'
		AND cpp.PUSH_NO IN 
		<foreach collection="list" index="index" item="pushNo" open="(" close=")" separator=",">
		#{pushNo}
		</foreach>
		ORDER BY cpp.PUSH_DATE DESC 
	</select>
	
	<select id="getprojectList" parameterType="ProjectPush" resultType="int">
		SELECT cpp.PUSH_NO  FROM COLABO_PERSON cp
		JOIN COLABO_PROJECT_PUSH cpp 
		ON cp.P_NO = cpp.P_NO 
		WHERE ','||cpp.CHECK_M_NO||',' NOT LIKE '%,' || #{memberNo} || ',%'
		AND cpp.RECEIVE_M_NO IN (0,#{memberNo})
		AND (cpp.RECEIVE_M_NO &lt;&gt; 0 
		OR cp.P_NO IN 
		<foreach collection="projectNoList" index="index" item="projectNo" open="(" close=")" separator=",">
		#{projectNo}
		</foreach>)
	</select>
	
	<insert id="projectPush" parameterType="ProjectPush">
		INSERT INTO COLABO_PROJECT_PUSH VALUES(
				colabo_push_no_seq.nextval, #{pushType}, #{pushContent}, SYSDATE,
				#{pushCheck}, #{addMNo}, #{receiveMNo}, #{projectNo}, null)
	</insert>
	
	<select id="applyListCheck" parameterType="InviteProject" resultType="_int">
		SELECT count(*) FROM COLABO_APPLY_PROJECT cap 
		WHERE M_NO = #{memberNo}
		AND P_NO = #{projectNo}
	</select>
	
	<delete id="deleteApplyList" parameterType="colabo">
		DELETE FROM COLABO_APPLY_PROJECT cap 
		WHERE P_NO = #{no}
		AND M_NO = #{memberNo}
	</delete>
	
	<insert id="enrollApplyProject">
		INSERT INTO COLABO_APPLY_PROJECT VALUES(
				#{projectNo},#{memberNo},#{applyMNo},SYSDATE)
	</insert>
	
	<select id="getNProjectList" resultMap="colaboResultSet">
		SELECT * FROM COLABO c 
		WHERE P_STATE = 'N'
	</select>
	
	<select id="receiveApplyProject" parameterType="int" resultMap="colaboResultSet">
		SELECT * FROM COLABO_APPLY_PROJECT cap
		JOIN COLABO c 
		ON cap.P_NO  = c.P_NO 
		JOIN MEMBER m
		ON cap.M_NO = m.M_NO 
		WHERE cap.APPLY_M_NO = #{memerNo}
	</select>
	
	<select id="applyProject" parameterType="int" resultMap="colaboResultSet">
		SELECT * FROM COLABO_APPLY_PROJECT cap
		JOIN COLABO c 
		ON cap.P_NO  = c.P_NO 
		WHERE cap.M_NO = #{memerNo}
	</select>
	
	<select id="projectTeamCheck" parameterType="colabo" resultType="_int">
		SELECT count(*) FROM COLABO_PERSON
		WHERE P_NO = #{no}
		AND M_NO = #{memberNo}
		AND M_NAME = #{memberName}
		AND M_EMAIL = #{memberEmail}
	</select>
	
	<delete id="deleteInviteList" parameterType="colabo">
		DELETE FROM COLABO_INVITE_PROJECT cip 
		WHERE P_NO = #{no}
		AND M_NO = #{memberNo}
	</delete>
	
	<insert id="enrollProjectTeam" parameterType="colabo">
		INSERT INTO COLABO_PERSON VALUES(
				#{no},#{memberNo},#{memberName},#{memberEmail},SYSDATE)
	</insert>
	
	<select id="inviteListCheck" parameterType="InviteProject" resultType="_int">
		SELECT count(*) FROM COLABO_INVITE_PROJECT cip 
		WHERE M_NO = #{memberNo}
		AND P_NO = #{projectNo}
	</select>
	
	<select id="inviteApplyProject" parameterType="int" resultMap="colaboResultSet">
		SELECT * FROM COLABO_INVITE_PROJECT cip
		JOIN COLABO c 
		ON cip.P_NO  = c.P_NO 
		WHERE cip.M_NO = #{memerNo}
	</select>
	
	<insert id="inviteProject" parameterType="InviteProject">
		INSERT INTO COLABO_INVITE_PROJECT VALUES(
				#{projectNo}, #{memberNo}, #{inviteMNo}, SYSDATE)
	</insert>
	
	
	<select id="getProjectProfile" parameterType="int" resultMap="colaboResultSet">
		SELECT C.P_NO , C.P_SUBJECT , C.P_NAME, C.P_DETAIL ,
		C.P_STACK , C.P_PERSON_COUNT , C.P_PERIOD ,
		C.P_UPLOAD_PATH , C.P_UPLOAD_NAME , C.P_UPLOAD_ORIGIN_NAME ,
		C.P_STATE , C.M_NO , C.P_START_DATE  FROM COLABO_PERSON cp 
		JOIN COLABO c 
		ON C.P_NO = CP.P_NO 
		WHERE CP.M_NO = #{memberNo}
	</select>
	
	<select id="getProjectType" parameterType="int" resultMap="colaboResultSet">
		SELECT P_NAME, P_STATE FROM COLABO 
		WHERE P_NO = #{getProjectNo}
	</select>
	
	<update id="changeProjectType" parameterType="colabo">
		UPDATE COLABO SET P_STATE = 
		<choose>
			<when test="stateKor.equals('프로젝트진행')">
				'C'
			</when>
			<when test="stateKor.equals('프로젝트완료')">
				'Y'
			</when>
		</choose>
		WHERE P_NO = #{no}
	</update>
	
	<select id="getMemberInfo" parameterType="int" resultMap="colaboResultSet">
		SELECT M_NO, M_NAME, M_EMAIL FROM MEMBER
		WHERE M_NO = #{memberNo}
	</select>
	
	<select id="selectEmailMember" parameterType="String" resultMap="colaboResultSet">
		SELECT M_NO, M_NAME, M_EMAIL FROM MEMBER 
		WHERE LENGTH(#{selectText}) >= 3
		AND M_EMAIL LIKE '%' || #{selectText} || '%'
	</select>
	
	<select id="getProjectNameNumberList" parameterType="int" resultMap="colaboResultSet">
		SELECT cp.P_NO, c.P_NAME FROM COLABO_PERSON cp 
		JOIN COLABO c 
		ON cp.P_NO  = c.P_NO 
		WHERE cp.M_NO = #{memberNo}
	</select>
	
	
	
	<select id="getProjectCreateMember" parameterType="int" resultType="_int">
		SELECT M_NO FROM COLABO
		WHERE P_NO = #{projectNo}
	</select>
	
	<delete id="AllScheduleDelete" parameterType="colabo">
		DELETE FROM PROJECT_SCHEDULE
		WHERE P_NO = #{no}
	</delete>
	
	<delete id="AllNoticeDelete" parameterType="colabo">
		DELETE FROM PROJECT_NOTICE
		WHERE P_NO = #{no}
	</delete>
	
	<delete id="AllSkillDelete" parameterType="colabo">
		DELETE FROM COLABO_SKILL_COMPLETE
		WHERE P_NO = #{no}
	</delete>
	
	<delete id="AllTeamDelete" parameterType="colabo">
		DELETE FROM COLABO_PERSON
		WHERE P_NO = #{no}
	</delete>
	
	<delete id="projectDelete" parameterType="colabo">
		DELETE FROM COLABO 
		WHERE P_NO = #{no}
	</delete>
	
	
	
	<update id="projectEdit" parameterType="colabo">
		<choose>
			<when test="uploadPath != null">
				UPDATE COLABO SET P_SUBJECT = #{subject},
								P_NAME = #{name},
								P_DETAIL = #{detail},
								P_STACK = #{stack},
								P_PERSON_COUNT = #{personCount},
								P_PERIOD = #{period},
								P_UPLOAD_PATH = #{uploadPath},
								P_UPLOAD_NAME = #{uploadName},
								P_UPLOAD_ORIGIN_NAME = #{uploadOriginName}
					WHERE P_NO = #{no}
			</when>
			<otherwise>
				UPDATE COLABO SET P_SUBJECT = #{subject},
								P_NAME = #{name},
								P_DETAIL = #{detail},
								P_STACK = #{stack},
								P_PERSON_COUNT = #{personCount},
								P_PERIOD = #{period}
					WHERE P_NO = #{no}
			</otherwise>
		</choose>
	</update>
	
	<select id="getProjectContent" parameterType="int" resultMap="colaboResultSet">
		SELECT * FROM COLABO
		WHERE P_NO = #{projectNo}
	</select>
	
	<select id="selectProjectList" parameterType="int" resultMap="projectMemberResultSet">
		SELECT cp.P_NO , c.P_NAME  FROM COLABO_PERSON cp
		JOIN COLABO c 
		ON cp.P_NO  = c.P_NO 
		WHERE cp.M_NO  = #{memberNo}
	</select>
	
	<select id="getProjectNumber" parameterType="colabo" resultType="_int">
		SELECT P_NO FROM COLABO
		WHERE P_SUBJECT = #{subject}
		AND P_NAME = #{name}
		AND P_STACK = #{stack}
		AND P_PERSON_COUNT = #{personCount}
		AND P_PERIOD = #{period}
		AND M_NO = #{memberNo}
	</select>
	
	<insert id="projectTeamEnroll" parameterType="projectMember">
		INSERT INTO COLABO_PERSON VALUES(#{projectNo}, #{memberNo},
									#{memberName}, #{memberEmail}, SYSDATE)
	</insert>
	
	<insert id="projectEnroll" parameterType="colabo">
		INSERT INTO COLABO VALUES(p_no_seq.nextval,#{subject},#{name},
							#{detail},#{stack},#{personCount},
							#{period},#{uploadPath},#{uploadName},
							#{uploadOriginName},#{state},#{memberNo},
							SYSDATE, null)
	</insert>
	
	<select id="getMemberName" parameterType="colabo" resultMap="colaboResultSet">
		SELECT M_NO, M_NAME, M_EMAIL   FROM MEMBER
		WHERE M_NO = #{memberNo}
	</select>
	
	<select id="frontSkillAvg" parameterType="skillChart" resultType="Double">
		SELECT AVG(PM_SKILL_FULL)  FROM COLABO_SKILL_COMPLETE csc
		WHERE P_NO = #{projectNo}
		AND PM_SKILL_CATEGORY = #{front}
	</select>
	
	<select id="backSkillAvg" parameterType="skillChart" resultType="Double">
		SELECT AVG(PM_SKILL_FULL)  FROM COLABO_SKILL_COMPLETE csc
		WHERE P_NO = #{projectNo}
		AND PM_SKILL_CATEGORY = #{back}
	</select>
	
	
	<delete id="deleteSkillList" parameterType="skillChart">
		DELETE FROM COLABO_SKILL_COMPLETE
		WHERE P_NO = #{projectNo}
		AND M_EMAIL = #{memberEmail}
		AND PM_SKILL_NAME = #{pmSkillName}
	</delete>
	
	
	<update id="editSkillList" parameterType="skillChart">
		UPDATE COLABO_SKILL_COMPLETE SET PM_SKILL_FULL = #{pmSkillFull}
									WHERE P_NO = #{projectNo}
									AND M_EMAIL = #{memberEmail}
									AND PM_SKILL_NAME = #{pmSkillName}
	</update>
	
	<select id="getSkillMember" parameterType="skillChart" resultMap="skillChartResultSet">
		SELECT * FROM COLABO_SKILL_COMPLETE
		WHERE P_NO = #{projectNo}
	</select>
	
	<insert id="enrollSkillList" parameterType="skillChart">
		INSERT INTO COLABO_SKILL_COMPLETE
		VALUES (#{projectNo},#{memberNo},#{memberName},
				#{memberEmail},#{pmSkillName},#{pmSkillFull},
				#{pmSkillColor},#{pmSkillCategory})
	</insert>
	
	<select id="getProjectMember" parameterType="projectMember" resultMap="projectMemberResultSet">
		SELECT * FROM COLABO_PERSON 
		WHERE P_NO = #{projectNo}
	</select>
	
	<select id="skillChartGet" parameterType="skillChart" resultMap="skillChartResultSet">
		SELECT * FROM COLABO_SKILL_COMPLETE
		WHERE P_NO = #{projectNo}
	</select>
	
	
	<delete id="scheduleDelete" parameterType="schedule">
		DELETE FROM PROJECT_SCHEDULE
		WHERE P_NO = #{projectNo}
		AND PS_CONTENT = #{title}
		AND PS_START = #{start}
		AND PS_END = #{end}
	</delete>
	
	
	<select id="scheduleIO" resultMap="scheduleResultSet">
		SELECT * FROM PROJECT_SCHEDULE
		WHERE P_NO = #{projectNo}
	</select>
	
	<insert id="scheduleEnroll" parameterType="schedule">
		INSERT INTO PROJECT_SCHEDULE
				 VALUES (#{projectNo},#{title},#{start},#{end})
	</insert>
	
	
	<insert id="noticeEnroll">
		INSERT INTO PROJECT_NOTICE (P_NOTICE_NO, P_NOTICE_TITLE, P_NOTICE_CONTENT, P_NOTICE_VIEWS, M_NO, P_NO )
							VALUES (p_notice_no_seq.nextval, #{noticeTitle}, #{noticeContent}, 0, #{memberNo}, #{no})
	</insert>
	
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*) FROM PROJECT_NOTICE 
		WHERE P_NO = #{no}
	</select>
	
	<select id="selectListAll" resultMap="colaboResultSet">
		SELECT * FROM PROJECT_NOTICE pn
		JOIN MEMBER m
		ON m.M_NO = pn.M_NO 
		JOIN COLABO c 
		ON pn.P_NO = c.P_NO 
		WHERE pn.P_NO = #{no}
		ORDER BY pn.P_NOTICE_DATE DESC 
	</select>
	
	<select id="noticeDetail" resultMap="colaboResultSet">
		SELECT * FROM PROJECT_NOTICE
		WHERE P_NOTICE_NO = #{noticeNo}
	</select>
	
	<delete id="noticeDelete">
		DELETE FROM PROJECT_NOTICE
		WHERE P_NOTICE_NO = #{noticeNo} 
	</delete>
	
	<update id="noticeEdit">
		UPDATE PROJECT_NOTICE SET P_NOTICE_TITLE = #{noticeTitle},
								P_NOTICE_CONTENT = #{noticeContent}
						WHERE P_NOTICE_NO = #{noticeNo}
	</update>
	
	
</mapper>





